spring.application.name=SpringMysqlConn

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://database-1.clo42ig04d24.ap-northeast-2.rds.amazonaws.com:3306/springtest?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&connectionCollation=utf8mb4_unicode_ci
spring.datasource.username=admin
spring.datasource.password=qwer1234

# ===============================================================
# !! 데이터베이스 성능 및 안정성을 위한 핵심 설정: HikariCP Connection Pool !!
# ===============================================================
# Too Many Connections 오류를 해결하기 위해 반드시 명시적으로 관리해야 합니다.

# [핵심] 커넥션 풀이 보유할 수 있는 최대 커넥션 수입니다.
# 애플리케이션이 DB에 동시에 생성할 수 있는 연결의 총량을 제한합니다.
# 현재 RDS의 max_connections가 30이므로, 관리용 여유분을 남겨두고 25로 설정하는 것이 안전합니다.
spring.datasource.hikari.maximum-pool-size=25

# 풀에서 유지하는 최소 유휴(idle) 커넥션 수입니다.
# 이만큼은 항상 연결된 상태로 유지하여 요청에 즉시 응답할 수 있도록 준비합니다.
spring.datasource.hikari.minimum-idle=5

# 풀에서 사용 가능한 커넥션이 없을 때, 커넥션을 얻기 위해 대기하는 최대 시간 (ms)
# 30초(30000ms)를 초과하면 타임아웃 예외가 발생하여 서버가 무한정 멈추는 것을 방지합니다.
spring.datasource.hikari.connection-timeout=30000

# 풀에 있는 커넥션의 최대 수명 시간 (ms)
# 30분(1800000ms)이 지나면 해당 커넥션은 풀에서 제거되고 새 커넥션으로 교체됩니다.
# 네트워크 문제 등으로 발생할 수 있는 '오래된 커넥션' 문제를 예방합니다.
spring.datasource.hikari.max-lifetime=1800000

# 사용되지 않는 커넥션이 풀에서 제거될 때까지 대기하는 유휴 시간 (ms)
# minimum-idle 개수보다 많은 유휴 커넥션이 이 시간(10분)동안 사용되지 않으면 풀에서 제거됩니다.
# 불필요한 리소스 낭비를 막아줍니다.
spring.datasource.hikari.idle-timeout=600000


spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB106Dialect
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.CharSet=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# 1. Spring Security 로그는 성능 이슈 유발 → 운영 시 끄기
logging.level.org.springframework.security=ERROR

# 2. 웹 로그 (컨트롤러 등)도 INFO로 낮추기
logging.level.org.springframework.web=DEBUG

# 3. 전체 루트 로깅 레벨도 INFO로 (디버그는 일시적 사용만)
logging.level.root=INFO

# 4. 스택트레이스 포함은 개발 중 디버깅 용도 → 운영 시 제거 권장
server.error.include-stacktrace=never


kakao.restapi-key=26d21d775f86870744730378488fe039
kakao.redirect-uri=http://localhost:3000/oauth/kakao/callback
kakao.client-secret=ti5VJtNKkGj10oiVajOTnY2UkqILkKFO
kakao.token-uri=https://kauth.kakao.com/oauth/token
kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

jwt.secret=MY_SUPER_SECRET_KEY_FOR_JWT_123456789
jwt.expiration=3600000

# 세션 설정
server.servlet.session.timeout=1800s
spring.session.timeout=1800s
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=Lax
spring.session.jdbc.initializer.enabled=true
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.session.serialization-id=json


# 파일 업로드 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 기본 업로드 디렉토리 (상대 경로) - 모든 업로드 파일의 부모 디렉토리
file.base-upload-dir=./uploads
# 기존 file.upload-dir을 file.base-upload-dir로 변경하여 명확성 증대

# 프로필 이미지 하위 디렉토리명
file.profile-image-subdir=profile_images

# 리뷰 이미지 하위 디렉토리명
file.review-image-subdir=review_images

file.product-image-subdir=images/products

# Base path for resource handler (URL path)
file.resource-handler-path=/uploads

# #리소스 헨들러
spring.mvc.static-path-pattern=/**
spring.web.resources.static-locations=classpath:/static/,file:${file.base-upload-dir}/${file.profile-image-subdir}/,file:${file.base-upload-dir}/${file.review-image-subdir}/

# # 서버 주소 (URL 생성 시 필요)
# server.address=localhost
# server.port=8080

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true

spring.mvc.pathmatch.matching-strategy=ant_path_matcher
spring.mvc.view.prefix=/static/
spring.mvc.view.suffix=.html

# application.properties

# ?????? API ??? ? (??????? ???? test_sk_XXX ??)
toss.payments.secretKey=test_sk_ma60RZblrqNRvRapRROZ8wzYWBn1

# ?????? API ?? URL
toss.payments.baseUrl=https://api.tosspayments.com

# ?????? ?? ?? ? ?????? ??? ?? URL (HTTPS ??, ?? ? ????? ??)
toss.payments.successUrl=https://shopsphere123.duckdns.org/api/orders/toss/success

# ?????? ?? ?? ? ?????? ??? ?? URL (HTTPS ??, ?? ? ????? ??)
toss.payments.failUrl=https://shopsphere123.duckdns.org/api/orders/toss/fail




# Google AI API Key
google.ai.api-key=AIzaSyBZpwSc50Ig1-18sD9-AExzL_z7b27992U

# Enable Configuration Properties
spring.config.import=classpath:chatbot.properties
spring.config.activate.on-profile=default