name: Deploy Spring Backend to EC2 with CodeDeploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ '17', '21' ]

    steps:
      - uses: actions/checkout@v3



      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        if: ${{ github.workspace }}/gradlew
        run: chmod +x gradlew
        working-directory: ./

      - name: Build Backend with Gradle
        if: ${{ github.workspace }}/gradlew
        run: ./gradlew build
        working-directory: ./

      - name: Build Backend with Maven
        if: ${{ github.workspace }}/pom.xml
        run: mvn clean package -DskipTests
        working-directory: ./

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create Deployment Package
        run: |
          mkdir deployment-package
          cp ./build/libs/*.jar deployment-package/
          zip -r backend-package.zip deployment-package
          aws s3 cp backend-package.zip s3://your-codedeploy-bucket-name/backend-package.zip
          

      - name: Create CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name your-codedeploy-application-name \
            --deployment-group-name your-codedeploy-deployment-group-name \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --s3-location bucket=your-codedeploy-bucket-name,key=backend-package.zip,bundleType=zip
